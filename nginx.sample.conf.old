server {
  listen 80;
  server_name  {Your server name};
  charset UTF-8;
  root {Your application root directory}/public;
  index index.php index.html;
  access_log  /var/log/nginx/{Your application name}.access.log;
  error_log  /var/log/nginx/{Your application name}.error.log  warn;
  client_max_body_size 1m;
  client_body_buffer_size 1m;

  # Hide nginx information from response header
  server_tokens off;
  fastcgi_hide_header X-Powered-By;

  # More_clear_headers Server;
  add_header X-Frame-Options DENY;
  add_header Content-Security-Policy "frame-ancestors none;";

  set $elb_https off;
  if ($http_x_forwarded_proto = https) {
    set $elb_https on;
  }

  # Execute php with php file and HTML file using FastCGI.This is a setting that is not related to codeigniter
  location ~\.(php|html)$ {
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
  }

  # Codeigniter index file existence check
  location / {
    try_files $uri $uri/ /index.php;
    location = /index.php {
      fastcgi_pass  unix:/run/php-fpm/www.sock;
      include       fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param CI_ENV development;
    }
  }

  # Run CGI
  location ~ ((.*\.php)(/.*)|(\.php))$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php-fpm/www.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $request_filename;
    # fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  # Static file access is cached
  location ~ .*\.(html?|jpe?g|gif|png|svg|css|js|ico|swf|inc) {
    expires 1d;
    access_log off;
  }

  # If favicon does not exist, return an empty image
  location = /favicon.ico {
    empty_gif;
    access_log  off;
    log_not_found off;
  }

  # Health check does not record access log
  location = /elb-status {
    access_log off;
    return 200;
  }

  # Checking access status
  location = /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }
}